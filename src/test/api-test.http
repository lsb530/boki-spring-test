
### get Boards
GET http://localhost:8080/api/boards
Accept: application/json

> {%
    client.test("Request executed successfully", () => {
        const validateExpression = !!response.status.toString().match(/20\d/)
        client.assert(validateExpression, "Response status is not 2xx")
    })

    client.test("Response body is array", () => {
        client.assert(Array.isArray(response.body), "Response body is not array")
        client.assert(response.body.length > 0, "Response body has no data")
    })

    client.test("Response data has board schema", () => {
        const board = response.body[0]
        client.assert(
            board.hasOwnProperty('id') &&
            board.hasOwnProperty('title') &&
            board.hasOwnProperty('content') &&
            board.hasOwnProperty('viewCnt') &&
            board.hasOwnProperty('likeCnt')
        )
    })
%}

### create Board
POST http://localhost:8080/api/boards
Accept: application/json
Content-Type: application/json

{
  "title": "hello code-boki tistory",
  "content": "I love development"
}

> {%
  client.global.set('boardId', response.body.id)
%}

### get Board
GET http://localhost:8080/api/boards/{{boardId}}
Accept: application/json

### update Board
PATCH http://localhost:8080/api/boards/{{boardId}}
Accept: application/json
Content-Type: application/json

{
  "content": "I love basketball"
}

### delete Board
DELETE http://localhost:8080/api/boards/{{boardId}}
Accept: application/json